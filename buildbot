#!/usr/bin/env python3

import sys
from pathlib import Path
from subprocess import run, PIPE
from contextlib import contextmanager
from argparse import ArgumentParser
from pipes import quote

SHARED = Path(__file__).resolve().parent / 'shared'

def echo_run(cmd):
    print('+', *cmd)
    run(cmd)

@contextmanager
def instance():
    arch = run(['uname', '-m'], stdout=PIPE).stdout.decode('latin1').strip()
    vm = 'vm-{}'.format(arch).replace('_', '-')
    try:
        echo_run(['kitchen', 'create', vm])
        yield vm
    finally:
        echo_run(['kitchen', 'destroy', vm])

def run_buildbot(*args):
    script = Path(args[0]).resolve().relative_to(SHARED)

    with instance() as vm:
        vm_script = Path('/mnt/shared') / script
        cmd = 'sudo {}'.format(str(vm_script))
        if len(args) > 1:
            cmd += ' ' + ' '.join(quote(arg) for arg in args[1:])
        echo_run(['kitchen', 'exec', vm, '-c', cmd])

def login():
    with instance() as vm:
        echo_run(['kitchen', 'login', vm])

COMMANDS = {
    'run': run_buildbot,
    'login': login,
}

def main():
    parser = ArgumentParser()
    parser.add_argument('command', choices=COMMANDS.keys())
    (options, args) = parser.parse_known_args()
    COMMANDS[options.command](*args)

if __name__ == '__main__':
    main()
